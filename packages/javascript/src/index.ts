import createClient from 'openapi-fetch'
import { ERROR_NOTIFICATION_API_BASE_URL } from './constants'
import type { paths } from './types/generated/schema.d.ts' // generated by openapi-typescript
import type { ErrorNotifyOptions } from './types/Options'

/**
 * Notify an error via inialum-error-notification-service.
 *
 * @param {Error} errorObject - The error object to notify.
 * @param {ErrorNotifyOptions} options - The options to configure the JavaScript SDK.
 * @param {string} options.token - The token used for authentication with the JavaScript SDK.
 * @param {string} [options.title] - The title of the notification.
 * @param {string} [options.description] - The description of the notification.
 * @param {string} options.serviceName - The name of the service that encountered the error.
 * @param {Options['environment']} options.environment - The environment in which the error occurred.
 *
 * @example
 * ```ts
 * import { notifyError } from '@inialum/error-notification-service-javascript-sdk'
 *
 * try {
 * 	throw new Error('Some error occurred')
 * } catch (error) {
 *  if (error instanceof Error) {
 * 		await notifyError(error, {
 * 			token: 'dummy',
 * 			serviceName: 'service-name',
 * 			environment: 'production'
 * 		})
 * 	}
 * }
 */
export const notifyError = async (
	errorObject: Error,
	{ token, title, description, serviceName, environment }: ErrorNotifyOptions,
) => {
	try {
		const client = createClient<paths>({
			baseUrl: ERROR_NOTIFICATION_API_BASE_URL,
		})

		const { data, error } = await client.POST('/api/v1/notify', {
			body: {
				title: title || errorObject.name,
				description: description || errorObject.message,
				service_name: serviceName,
				environment,
			},
			headers: {
				Authorization: `Bearer ${token}`,
				'Content-Type': 'application/json',
			},
		})

		if (error) {
			console.error(error)
			throw new Error('Failed to notify error')
		}
		return data
	} catch (error) {
		console.error(error)

		if (error instanceof Error) {
			throw error
		}
		throw new Error('Failed to notify error')
	}
}
