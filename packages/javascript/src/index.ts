import createClient from 'openapi-fetch'
import { ERROR_NOTIFICATION_API_BASE_URL } from './constants'
import type { EnvironmentType } from './types/Environment.js'
import type { paths } from './types/generated/schema.d.ts' // generated by openapi-typescript

/**
 * Notify an error via inialum-error-notification-service.
 */
export const notifyError = async (
	errorObject: Error,
	{
		token,
		title,
		description,
		serviceName,
		environment,
	}: {
		token: string
		title?: string
		description?: string
		serviceName: string
		environment: EnvironmentType
	},
) => {
	try {
		const client = createClient<paths>({
			baseUrl: ERROR_NOTIFICATION_API_BASE_URL,
		})

		const { data, error } = await client.POST('/api/v1/notify', {
			body: {
				title: title || errorObject.name,
				description: description || errorObject.message,
				service_name: serviceName,
				environment,
			},
			headers: {
				Authorization: `Bearer ${token}`,
				'Content-Type': 'application/json',
			},
		})

		if (error) {
			console.error(error)
			throw new Error('Failed to notify error')
		}
		return data
	} catch (error) {
		console.error(error)

		if (error instanceof Error) {
			throw error
		}
		throw new Error('Failed to notify error')
	}
}
